{"version":3,"sources":["assets/rect.png","assets/test-img.png","assets/profilepic.png","assets/2ppl.png","assets/3ppl.png","Home.js","About.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Footer.js","port/FeatureRequest.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Jumbotron","Container","Row","Col","md","className","src","profilepic","alt","CardDeck","Card","to","Img","rect","Body","Title","Text","About","NoMatch","Layout","props","children","NavigationBar","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Item","Link","Footer","FeatureRequest","class","defaultActiveKey","heropic","CardGroup","variant","twoppl","threeppl","App","Fragment","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fb1fdb0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rect.2af36872.png\";","module.exports = __webpack_public_path__ + \"static/media/test-img.a77ddc7a.png\";","module.exports = __webpack_public_path__ + \"static/media/profilepic.0cb8403e.png\";","module.exports = __webpack_public_path__ + \"static/media/2ppl.a03d02a6.png\";","module.exports = __webpack_public_path__ + \"static/media/3ppl.1889400d.png\";","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport {Jumbotron, Row, Col, Card, CardDeck, Container } from 'react-bootstrap';\nimport profilepic from './assets/profilepic.png'\nimport rect from './assets/rect.png'\nimport proOne from './assets/test-img.png'\n\n\n\nexport const Home = () => (\n  <div>\n<Jumbotron>\n  <Container>\n      <Row>\n          <Col md={8} className=\"\">\n            <h1 className=\"display-4\">Shabia</h1>\n            <h1 className=\"display-6\">UX Product Designer</h1>\n              <p className=\"lead\">\n              I design apps and code front end <br />\n              I love all things art <br />\n              Currently based in London open to roam \n              </p>\n          </Col>\n            <Col md={4} className=\"d-flex align-items-center\"> <img src={profilepic} className=\"profile\" alt=\"hp-bg\"/> </Col>\n      </Row>\n      </Container>\n </Jumbotron>\n<Container>\n      <Row>\n      <CardDeck className=\"mb-4\">\n\n    <Card>\n    <Link to=\"/port/FeatureRequest\">\n     <Card.Img src={rect} />\n     <Card.Body>\n    \n      <Row>\n      <Col md={6} ><Card.Title>Feature Request UI</Card.Title>\n        </Col><Col md={4} ><Card.Text>\n        <small className=\"text-muted\">Web UI - Social</small>\n        </Card.Text></Col>\n      </Row>\n      </Card.Body>\n      </Link>\n    </Card>\n    <Card>\n    <Link to=\"/port/FeatureRequest\">\n     <Card.Img src={rect} />\n     <Card.Body>\n    \n      <Row>\n      <Col md={6} ><Card.Title>Feature Request UI</Card.Title>\n        </Col><Col md={4} ><Card.Text>\n        <small className=\"text-muted\">Web UI - Social</small>\n        </Card.Text></Col>\n      </Row>\n      </Card.Body>\n      </Link>\n    </Card>\n</CardDeck>\n<CardDeck>\n  \n<Card>\n    <Link to=\"/port/FeatureRequest\">\n     <Card.Img src={rect} />\n     <Card.Body>\n    \n      <Row>\n      <Col md={6} ><Card.Title>Feature Request UI</Card.Title>\n        </Col><Col md={4} ><Card.Text>\n        <small className=\"text-muted\">Web UI - Social</small>\n        </Card.Text></Col>\n      </Row>\n      </Card.Body>\n      </Link>\n    </Card>\n    <Card>\n    <Link to=\"/port/FeatureRequest\">\n     <Card.Img src={rect} />\n     <Card.Body>\n    \n      <Row>\n      <Col md={6} ><Card.Title>Feature Request UI</Card.Title>\n        </Col><Col md={4} ><Card.Text>\n        <small className=\"text-muted\">Web UI - Social</small>\n        </Card.Text></Col>\n      </Row>\n      </Card.Body>\n      </Link>\n    </Card>\n</CardDeck>\n      </Row>\n      </Container>\n      </div>\n\n\n\n\n)\n","import React from 'react'\nimport {Container } from 'react-bootstrap';\n\nexport const About = () => (\n  <Container>\n    <div>\n        <h2>About Page</h2>\n        <p>This is mostly about us.</p>\n    </div>\n  </Container>\n)\n","import React from 'react';\n\nexport const NoMatch = () => (\n  <div>\n    <h2>No Match</h2>\n  </div>\n)\n","import React from 'react';\n\n\nexport const Layout = (props) => (\n  <div>\n    {props.children}\n  </div>\n)\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Nav, Navbar} from 'react-bootstrap';\n\nexport const NavigationBar = () => (\n  <header className=\"ux-port-header\">\n<Container>\n  <Navbar collapseOnSelect expand=\"lg\">\n    <Navbar.Brand href=\"/\">S.</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"text-end\" >\n      <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/\">Portfolio</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link>\n              <Link to=\"/about\">About</Link>\n            </Nav.Link>\n          </Nav.Item>\n      </Nav>\n  </Navbar.Collapse>\n</Navbar>\n</Container>\n </header>\n)\n","import React from 'react';\nimport {Container } from 'react-bootstrap';\n\n\nexport const Footer = () => (\n<footer><Container>\n  <p>Hand made with ❤️ in React</p>\n  </Container>\n</footer>\n)\n","import React from 'react'\nimport {Row, Nav, Col, Card, CardGroup, Container, Jumbotron} from 'react-bootstrap';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport heropic from './../assets/test-img.png'\nimport twoppl from './../assets/2ppl.png'\nimport threeppl from './../assets/3ppl.png'\n\n\n\n\n\nexport const FeatureRequest = () => (\n  <div>\n<section className=\"port-hero\">\n  <Jumbotron>\n  <Container>\n    <Row >\n    <Col md={6} className=\"\">\n            <h1 className=\"display-6\">Feature Request UI</h1>\n            <blockquote class=\"blockquote title-border my-4\">\n              <p>A feature request system to capture user needs, feedback and determine the most popular requests.</p>\n            </blockquote>\n        \n              <Nav defaultActiveKey=\"/home\" className=\"flex-column\">\n            \n                <Link to=\"#background\">Background</Link>\n                <Link to=\"#process\">process</Link>\n                <Link to=\"#outcomes\">Outcomes</Link>\n              </Nav>\n          </Col>\n            <Col md={6} className=\"d-flex align-items-center\"> \n              <img src={heropic} alt=\"Hero photo\" className=\"img-fluid\"/> \n            </Col>  \n    </Row>\n    </Container>\n    </Jumbotron>\n </section>\n <Container>\n <section className=\"work-overview\" >\n\n </section>\n\n <section className=\"port-section\" id=\"background\">\n    <h2 className=\"text-center\">Background</h2>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Problem</h3></Col>\n    <Col md={8} className=\"sub-content\">\n      <p>Repurposing Topology builder for a new user groups who have never used the system before but will need to because of losing their offices \n        to remote work. We have an idea of these user’s day to day activity but to learn better on how to add more user specific features we decided \n        some sort of feedback system is required.</p>\n    <p>`f`ind out what is missing from Topology builder especially from large new types of people such as Cisco sellers, \n      partners and sales engineers, whom is it missing for and why they’d like it. This will help us going forward to design features \n      for new specific groups of users.</p>\n    </Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Users\t&amp; Audience</h3></Col>\n    <Col md={9} className=\"sub-content\">\n    <CardGroup>\n  <Card>\n    <Card.Img variant=\"middle\" src={twoppl} className=\"img-fluid\" />\n    <Card.Body>\n      <Card.Title>Product Managers, UX Designers</Card.Title>\n      <Card.Text>\n      Look at the reported problems and design the solutions\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <Card>\n    <Card.Img variant=\"middle\" src={threeppl} className=\"img-fluid\" />\n    <Card.Body>\n      <Card.Title>Network &mp; Sales Engineers, Partners + all new user types we don’t know</Card.Title>\n      <Card.Text>\n      Report needs, problems and missing features\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  </CardGroup>\n\n    </Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Team &amp; Tools</h3></Col>\n    <Col md={9} className=\"sub-content\">\n      <Card className=\"p-5 blu-gry\">\n        <Row>\n          <Col md={6}>\n          <dl>\n            <dt>Role</dt>\n            <dd>UX Designer</dd>\n          </dl>\n          </Col>\n          <Col md={6}>\n          <dl>\n            <dt>Delivery</dt>\n            <dd>Remote</dd>\n          </dl>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={6}>\n          <dl>\n            <dt>Team &amp; Collaborators</dt>\n            <dd>Antony - UUX Design</dd>\n            <dd>Fadzie - Product Mangement</dd>\n          </dl>\n          </Col>\n          <Col md={6}>\n          <dl>\n            <dt>Method  and Tools</dt>\n            <dd>Figma Design -  Wireframe + UI Design</dd>\n            <dd>Adobe Sketch -  Rapid prototype ideas.</dd>\n            <dd>Miro - User flows, Requirements Analysis</dd>\n          </dl>\n          </Col>\n        </Row>\n      </Card>\n    </Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Scope &amp; Constraints</h3></Col>\n    <Col md={9} className=\"sub-content\">\n      <p>Personally put this forward as I noticed a problem with knowing what the gaps between user use cases were. \n         Prefer talking  users before starting any \n        project but at this present moment can’t contact SE’s and partners due to business reasons so designing f\n        or unknown use cases is requires a lot of guessing.</p>\n    </Col>\n    </Row>\n </section>\n\n <section className=\"port-section\" id=\"process\" >\n <h2 className=\"text-center\">Process</h2>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Idea Generation</h3></Col>\n    <Col md={8} className=\"sub-content\">\n      <p>Designers talked about the features we wanted and how best to capture the info. \n        We wanted to be basic and give us the info back without having the need to analyse requests.</p>\n        <ul>\n          <li>Organised ideas into buckets - Important/Nice to have/Overkill</li>\n          <li>Reasons for ideas - Why</li>\n          <li>Two user types - admin (us) topolgy users</li>\n        </ul>\n    </Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Feature mapping &amp; user flow</h3></Col>\n    <Col md={8} className=\"sub-content\">\n      \n    </Col>\n    </Row>\n    <h3 className=\"title-border\">Prototyping</h3>\n \n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h4>User view Design 1</h4></Col>\n    <Col md={8} className=\"sub-content\"><p>First basic pass to get the minimal features in</p></Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h5>Thoughts &amp; discussion</h5></Col>\n    <Col md={8} className=\"sub-content\"><p>Thoughts screen is a bit busy\n        We want to reduce submissions of the same thing so need a way to show other peoples submission\n        Maybe commenting on submissions and for explaining any further views - encourages discussions and conversations\n        A way to show we are working on the submissions - keeps customers engaged and happy</p></Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h4>User view Design 2</h4></Col>\n    <Col md={8} className=\"sub-content\"><p>First basic pass to get the minimal features in</p></Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h5>Thoughts &amp; discussion</h5></Col>\n    <Col md={8} className=\"sub-content\"><p>Thoughts screen is a bit busy\n        We want to reduce submissions of the same thing so need a way to show other peoples submission\n        Maybe commenting on submissions and for explaining any further views - encourages discussions and conversations\n        A way to show we are working on the submissions - keeps customers engaged and happy</p></Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Visual UI</h3></Col>\n    <Col md={8} className=\"sub-content\">Cisco UI Kit\n        Fit into Topology Builder UI</Col>\n    </Row>\n </section>\n\n <section className=\"port-section\" id=\"outcomes\" >\n <h2 className=\"text-center\">Lesson &amp; Outcomes</h2>\n <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Throughts</h3></Col>\n    <Col md={8} className=\"sub-content\">\n      <p>As this is something new and an experiment we will see how many people use it. To start with we will have 10,000 users a 5% response rate is\n         normal for surveys and user feedback on dCloud apps so we can measure it against that.</p>\n<p>What worked well in the project? - designing for myself  - this is unusual as everything in this team has been for products most people would never use. Figuring out problems was really fast.\nIn hindsight, what would you do differently? - Look at how we manage and analyse overall feedback for completely new projects. Spend some time talking to the new potential users\nIf you’d had more time, what would you have done? - A full on admin system for the requests\nWhat data do you have to quantify the results of the project? - At time of writing this has been broken down into stories and now being built.</p>\n\n    </Col>\n    </Row>\n    <Row className=\"sect-row\">\n    <Col md={3} className=\"sub-section\"><h3 className=\"title-border\">Future</h3></Col>\n    <Col md={8} className=\"sub-content\">\n      <p>If in future we get a lot of requests we need to a way to navigate the requests and comments better but lets see how it goes.</p>\n      <p>If commenting get’s heavy we will need to better organise this</p>\n\n\n    </Col>\n    </Row>\n </section>\n </Container>\n\n\n      </div>\n\n\n\n\n)\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Home } from './Home';\nimport { About } from './About';\nimport { NoMatch } from './NoMatch';\nimport { Layout } from './components/Layout';\nimport { NavigationBar } from './components/NavigationBar';\nimport { Footer } from './components/Footer';\nimport { FeatureRequest } from './port/FeatureRequest';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <NavigationBar />\n          \n          <Layout>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/port/FeatureRequest\" component={FeatureRequest} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Layout>\n          <Footer />\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/ux-port.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}